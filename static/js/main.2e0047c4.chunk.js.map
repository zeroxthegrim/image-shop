{"version":3,"sources":["Context.js","components/Header.js","hooks/useHover.js","components/CartItem.js","pages/Cart.js","components/Image.js","utilis/index.js","pages/Photos.js","App.js","index.js"],"names":["Context","createContext","ContextProvider","children","useState","allPhotos","setAllPhotos","cartItems","setCartItems","useEffect","fetch","then","response","json","data","Provider","value","toggleFavorite","id","updatedArr","map","photo","isFavorite","addToCart","newItem","prev","removeFromCart","prevItems","filter","item","emptyCart","Header","cartClassName","useContext","length","to","className","useHover","hovered","setHovered","ref","useRef","enter","leave","current","addEventListener","removeEventListener","CartItem","iconClassName","onClick","src","url","width","Cart","buttonText","setButtonText","cartItemElements","key","toLocaleString","style","currency","setTimeout","console","log","textAlign","Image","img","includes","getClass","i","Photos","imgElements","App","basename","exact","path","process","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.2e0047c4.chunk.js","sourcesContent":["import React, {createContext, useState, useEffect} from \"react\"\r\n\r\nconst Context = createContext();\r\n\r\nfunction ContextProvider({children}) {\r\n    const [allPhotos, setAllPhotos] = useState([])\r\n    const [cartItems, setCartItems] = useState([])\r\n    \r\n    useEffect(() => {\r\n        fetch(\"https://raw.githubusercontent.com/bobziroll/scrimba-react-bootcamp-images/master/images.json\")\r\n            .then(response => response.json())\r\n            .then(data => setAllPhotos(data))\r\n    }, [])\r\n\r\n    function toggleFavorite(id) {\r\n        const updatedArr = allPhotos.map(photo => {\r\n            if (photo.id === id) {\r\n                return {\r\n                    ...photo,\r\n                    isFavorite: !photo.isFavorite\r\n                }\r\n            }\r\n            else {\r\n                return photo\r\n            }\r\n        })\r\n        setAllPhotos(updatedArr)\r\n    }\r\n\r\n    function addToCart(newItem) {\r\n        setCartItems(prev => [...prev, newItem])\r\n    }\r\n\r\n    function removeFromCart(id) {\r\n        setCartItems(prevItems => prevItems.filter(item => item.id !== id))\r\n    }\r\n\r\n    function emptyCart() {\r\n        setCartItems([])\r\n    }\r\n\r\n    return (\r\n        <Context.Provider value={{\r\n            allPhotos, \r\n            toggleFavorite, \r\n            addToCart, \r\n            removeFromCart, \r\n            cartItems, \r\n            emptyCart\r\n        }}>\r\n            {children}\r\n        </Context.Provider>\r\n    )\r\n}\r\n\r\nexport {ContextProvider, Context}","import React, {useContext} from \"react\"\r\nimport {Link} from \"react-router-dom\"\r\nimport {Context} from \"../Context\"\r\n\r\nfunction Header() {\r\n    \r\n    const {cartItems} = useContext(Context) \r\n    const cartClassName = cartItems.length > 0 ? \"fill\" : \"line\"\r\n\r\n    return (\r\n        <header>\r\n            <Link to=\"/\"><h2>Image Shop</h2></Link>\r\n            <Link to=\"/cart\"><i className={`ri-shopping-cart-${cartClassName} ri-fw ri-2x`}></i></Link>\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default Header","import {useState, useEffect, useRef} from \"react\"\r\n\r\nfunction useHover() {\r\n    const [hovered, setHovered] = useState(false)\r\n    const ref = useRef(null)\r\n\r\n    function enter() {\r\n        setHovered(true)\r\n    }\r\n\r\n    function leave() {\r\n        setHovered(false)\r\n    }\r\n\r\n    useEffect(() => {\r\n        ref.current.addEventListener(\"mouseenter\", enter)\r\n        ref.current.addEventListener(\"mouseleave\", leave)\r\n\r\n        return () => {\r\n            ref.current.removeEventListener(\"mouseenter\", enter)\r\n            ref.current.removeEventListener(\"mouseleave\", leave)\r\n        }\r\n    }, [])\r\n    \r\n    return [hovered, ref]\r\n}\r\n\r\nexport default useHover","import React, {useState, useContext} from \"react\"\r\nimport PropTypes from \"prop-types\"\r\nimport {Context} from \"../Context\"\r\nimport useHover from \"../hooks/useHover\"\r\n\r\nfunction CartItem({item}) {\r\n    const [hovered, ref] = useHover()\r\n    const {removeFromCart} = useContext(Context)\r\n\r\n    const iconClassName = hovered ? \"ri-delete-bin-fill\" : \"ri-delete-bin-line\"\r\n    \r\n    return (\r\n        <div className=\"cart-item\">\r\n            <i \r\n                onClick={() => removeFromCart(item.id)} \r\n                className={iconClassName}\r\n                ref={ref}\r\n            >\r\n            </i>\r\n            \r\n            <img src={item.url} width=\"130px\" />\r\n            <p>$5.99</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nCartItem.propTypes = {\r\n    item: PropTypes.shape({\r\n        url: PropTypes.string.isRequired\r\n    })\r\n}\r\n\r\nexport default CartItem","import React, {useState,useContext} from \"react\"\r\nimport {Context} from \"../Context\"\r\n\r\nimport CartItem from \"../components/CartItem\"\r\n\r\nfunction Cart() {\r\n    const [buttonText, setButtonText] = useState(\"Place Order\")\r\n    const {cartItems, emptyCart} = useContext(Context)\r\n    const cartItemElements = cartItems.map(item => (\r\n        <CartItem item={item} key={item.id}/>\r\n    ))\r\n\r\n    function calculatePrice() {\r\n        return (cartItems.length * 5.99).toLocaleString(\"en-US\", {style: \"currency\", currency: \"USD\"})\r\n    }\r\n\r\n    function placeOrder() {\r\n        setButtonText(\"Ordering...\")\r\n        setTimeout(() => {\r\n            console.log(\"Order placed!\")\r\n            setButtonText(\"Place Order!\")\r\n            emptyCart()\r\n        }, 3000)\r\n    }\r\n\r\n    return (\r\n        <main className=\"cart-page\">\r\n            <h1>Check out</h1>\r\n            {cartItemElements}\r\n            <p className=\"total-cost\">Total: {calculatePrice()}</p>\r\n            {\r\n                cartItems.length ?\r\n                <div className=\"order-button\">              \r\n                    <button onClick={placeOrder}>{buttonText}</button>           \r\n                </div> :\r\n                <p style={{textAlign: \"center\"}}>You have no items in cart.</p>\r\n            }\r\n            \r\n        </main>\r\n    )\r\n}\r\n\r\nexport default Cart","import React, {useState, useContext} from \"react\"\r\nimport {Context} from \"../Context\"\r\nimport PropTypes from \"prop-types\"\r\nimport useHover from \"../hooks/useHover\"\r\n\r\n\r\nfunction Image({className, img}) {\r\n    const [isZoomed, setIsZoomed] = useState(false)\r\n    const [hovered, ref] = useHover()\r\n    const {toggleFavorite, addToCart, cartItems, removeFromCart} = useContext(Context)\r\n    \r\n    function heartIcon() {\r\n        if (img.isFavorite) {\r\n            return (\r\n                <i className=\"ri-heart-fill favorite\" onClick={() => toggleFavorite(img.id)}></i>\r\n            )\r\n        } else if (hovered) {\r\n            return (\r\n                <i onClick={() => toggleFavorite(img.id)} className=\"ri-heart-line favorite\"></i>\r\n            )\r\n        }\r\n    }\r\n    \r\n    function cartIcon() {\r\n        if (cartItems.includes(img)) {\r\n            return <i onClick={() => removeFromCart(img.id)} className=\"ri-shopping-cart-fill cart\"></i>\r\n        } else if (hovered) {\r\n            return <i onClick={() => addToCart(img)} className=\"ri-add-circle-line cart\"></i>\r\n        }\r\n    }\r\n    \r\n\r\n    return (\r\n        <div \r\n             ref={ref}\r\n             className={`${className} image-container`}\r\n        >                      \r\n            <img src={img.url} className=\"image-grid\" />\r\n            {heartIcon()}\r\n            {cartIcon()}\r\n        </div>\r\n    )\r\n}\r\n\r\nImage.propTypes = {\r\n    className: PropTypes.string,\r\n    img: PropTypes.shape({\r\n        id: PropTypes.string.isRequired,\r\n        url: PropTypes.string.isRequired,\r\n        isFavorite: PropTypes.bool\r\n    })\r\n}\r\n\r\nexport default Image","export function getClass(i) {\r\n    if (i % 5 === 0) {\r\n        return 'big';\r\n    }\r\n    else if (i % 6 === 0) {\r\n        return 'wide'\r\n    }\r\n}","import React, {useContext} from \"react\"\r\n\r\nimport Image from \"../components/Image\"\r\nimport {getClass} from \"../utilis\"\r\nimport {Context} from \"../Context\"\r\n\r\nfunction Photos() {\r\n\r\n    const {allPhotos} = useContext(Context)\r\n    const imgElements = allPhotos.map((img, i) =>(\r\n        <Image key={img.id} img={img} className={getClass(i)}/>\r\n    ))\r\n    \r\n\r\n    return (\r\n        <main className=\"photos\">\r\n            {imgElements}\r\n        </main>\r\n    )\r\n}\r\n\r\nexport default Photos","import React from \"react\"\nimport Header from \"./components/Header\"\nimport \"./styles.css\"\nimport Cart from \"./pages/Cart\"\nimport Photos from \"./pages/Photos\"\nimport {Switch, Route, HashRouter} from \"react-router-dom\"\n\nfunction App() {    \n    return (\n        <HashRouter basename=\"/\">\n            <div>\n                <Header />\n                \n                <Switch>\n                    <Route exact path=\"/\"><Photos /></Route>\n                    <Route path=\"/cart\"><Cart /></Route>\n                </Switch>\n\n            </div>\n        </HashRouter>\n    )\n}\n\nexport default App","import React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport {BrowserRouter as Router} from \"react-router-dom\"\nimport {ContextProvider} from \"./Context\"\n\nimport App from \"./App\"\n\nconst routerBaseName = process.env.PUBLIC_URL;\nconsole.log(routerBaseName)\n\nReactDOM.render(\n    <ContextProvider>\n        <Router basename={routerBaseName}>\n            <App />\n        </Router>\n    </ContextProvider>,\n    document.getElementById(\"root\"))"],"sourceRoot":""}